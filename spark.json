{
  "_copyright": "2016-2017, Frederico Martins",
  "_author":    "Frederico Martins <http://github.com/fscm>",
  "_license":   "SPDX-License-Identifier: MIT",
  "variables": {
    "app_name":                "spark",
    "app_name_ext":            "-jupyter",
    "checksum_type":           "none",
    "checksum_value":          "",
    "headless":                "true",
    "java_build_number":       "15",
    "java_major_version":      "8",
    "java_update_version":     "112",
    "os_arch":                 "amd64",
    "os_short_arch":           "x64",
    "os_type_virtualbox":      "Debian_64",
    "os_version":              "8.7.1",
    "scala_short_version":     "2.11",
    "scala_version":           "2.11.8",
    "spark_cassandra_version": "2.0.0-M2",
    "spark_csv_version":       "1.5.0",
    "spark_hadoop_version":    "2.7",
    "spark_uid":               "2000",
    "spark_version":           "2.0.2",
    "system_disk_size":        "12288",
    "system_domain":           "marsh",
    "system_hostname":         "spark",
    "system_locale":           "en_US",
    "system_memory":           "2048",
    "system_pwd":              "spark",
    "system_timezone":         "Europe/Lisbon",
    "system_user":             "pollywog"
  },
  "builders": [
    {
      "name":                 "virtualbox",
      "type":                 "virtualbox-iso",
      "boot_wait":            "10s",
      "disk_size":            "{{user `system_disk_size`}}",
      "guest_additions_mode": "disable",
      "guest_os_type":        "{{user `os_type_virtualbox`}}",
      "hard_drive_interface": "sata",
      "headless":             "{{user `headless`}}",
      "http_directory":       "http",
      "iso_checksum":         "{{user `checksum_value`}}",
      "iso_checksum_type":    "{{user `checksum_type`}}",
      "iso_target_path":      "builds/cache/debian-{{user `os_version`}}-{{user `os_arch`}}-netinst.iso",
      "output_directory":     "builds/sandbox/{{build_type}}",
      "shutdown_command":     "echo '{{user `system_pwd`}}' | sudo -S /sbin/shutdown -hP now",
      "ssh_password":         "{{user `system_pwd`}}",
      "ssh_port":             22,
      "ssh_username":         "{{user `system_user`}}",
      "ssh_wait_timeout":     "3600s",
      "vm_name":              "{{user `app_name`}}-{{isotime \"20060102150405\"}}",
      "boot_command": [
        "<esc><wait>",
        "auto ",
        "preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg ",
        "netcfg/get_hostname={{user `system_hostname`}} ",
        "netcfg/get_domain={{user `system_domain`}} ",
        "time/zone={{user `system_timezone`}} ",
        "passwd/root-password={{user `system_pwd`}} ",
        "passwd/root-password-again={{user `system_pwd`}} ",
        "passwd/username={{user `system_user`}} ",
        "passwd/user-password={{user `system_pwd`}} ",
        "passwd/user-password-again={{user `system_pwd`}}<enter>"
      ],
      "iso_urls": [
        "../builds/isos/debian-{{user `os_version`}}-{{user `os_arch`}}-netinst.iso",
        "http://cdimage.debian.org/debian-cd/{{user `os_version`}}/{{user `os_arch`}}/iso-cd/debian-{{user `os_version`}}-{{user `os_arch`}}-netinst.iso",
        "http://cdimage.debian.org/cdimage/archive/{{user `os_version`}}/{{user `os_arch`}}/iso-cd/debian-{{user `os_version`}}-{{user `os_arch`}}-netinst.iso"
      ],
      "vboxmanage": [
        ["modifyvm", "{{.Name}}", "--memory", "{{user `system_memory`}}"],
        ["modifyvm", "{{.Name}}", "--vram", "12"],
        ["modifyvm", "{{.Name}}", "--pae", "off"],
        ["modifyvm", "{{.Name}}", "--cpus", "1"],
        ["modifyvm", "{{.Name}}", "--hwvirtex", "on"],
        ["modifyvm", "{{.Name}}", "--paravirtprovider", "legacy"],
        ["modifyvm", "{{.Name}}", "--nestedpaging", "on"],
        ["modifyvm", "{{.Name}}", "--accelerate3d", "off"],
        ["modifyvm", "{{.Name}}", "--accelerate2dvideo", "off"],
        ["modifyvm", "{{.Name}}", "--chipset", "piix3"],
        ["modifyvm", "{{.Name}}", "--boot1", "dvd"],
        ["modifyvm", "{{.Name}}", "--boot2", "disk"],
        ["modifyvm", "{{.Name}}", "--boot3", "none"],
        ["modifyvm", "{{.Name}}", "--boot4", "none"],
        ["modifyvm", "{{.Name}}", "--mouse", "ps2"],
        ["modifyvm", "{{.Name}}", "--keyboard", "ps2"],
        ["modifyvm", "{{.Name}}", "--audio", "none"],
        ["modifyvm", "{{.Name}}", "--usb", "off"],
        ["modifyvm", "{{.Name}}", "--vrde", "off"]
      ]
    }
  ],
  "provisioners": [
    {
      "type":        "file",
      "source":      "files/sysctl/",
      "destination": "/tmp"
    },
    {
      "type":        "file",
      "source":      "files/systemd/",
      "destination": "/tmp"
    },
    {
      "type":        "file",
      "source":      "files/spark/",
      "destination": "/tmp"
    },
    {
      "type":        "file",
      "source":      "files/jupyter/",
      "destination": "/tmp"
    },
    {
      "only":           ["virtualbox"],
      "type":           "shell",
      "inline_shebang": "/bin/bash -e",
      "inline": [
        "unset HISTFILE",
        "history -cw",
        "echo === System Packages ===",
        "echo 'deb http://ftp.debian.org/debian jessie-backports main contrib non-free' | sudo tee /etc/apt/sources.list.d/backports.list > /dev/null",
        "sudo apt-get -qq update",
        "sudo DEBIAN_FRONTEND=noninteractive apt-get -y -qq install --no-install-recommends linux-headers-amd64 vim wget dbus unzip zip libyaml-0-2 curl",
        "sudo DEBIAN_FRONTEND=noninteractive apt-get -y -qq install --no-install-recommends -t jessie-backports virtualbox-guest-dkms virtualbox-guest-utils",
        "sudo DEBIAN_FRONTEND=noninteractive apt-get -y -qq install --no-install-recommends -t jessie-backports python3 python3-dev python3-pip libzmq3 libzmq3-dev ipython3-notebook python3-zmq ipython3 python3-nose python3-backports-abc python3-jsonschema python3-numpy python3-scipy python3-pandas python3-jinja2 python3-markupsafe python3-tornado python3-setuptools python3-jsonschema python3-yaml",
        "sudo apt-get -y -qq purge dictionaries* emacs* iamerican* ibritish* ienglish* ispell nfacct tcpd vim-tiny xauth libxmuu1",
        "sudo apt-get -y -qq purge `dpkg -l | grep python | awk '{print $2}' | grep -v python3 | grep -v dh-python | grep -v ipython-notebook-common`",
        "sudo apt-get -y -qq --purge autoremove",
        "sudo apt-get autoclean",
        "sudo apt-get clean"
      ]
    },
    {
      "type":           "shell",
      "inline_shebang": "/bin/bash -e",
      "inline": [
        "unset HISTFILE",
        "history -cw",
        "echo === Python Settings ===",
        "echo -e 'export PYTHONHASHSEED=0\\nexport PYTHONIOENCODING=UTF-8\\nexport PIP_DISABLE_PIP_VERSION_CHECK=1' | sudo tee /etc/profile.d/python.sh > /dev/null",
        "sudo sed -i -r -e 's/#DefaultEnvironment/DefaultEnvironment/;/DefaultEnvironment/s/([^=])$/\\1 /;/DefaultEnvironment/s/$/\"PYTHONHASHSEED=0\" \"PYTHONIOENCODING=UTF-8\" \"PIP_DISABLE_PIP_VERSION_CHECK=1\"/' /etc/systemd/system.conf",
        "sudo pip3 install --upgrade --ignore-installed pip",
        "sudo apt-get -y -qq purge python3-pip",
        "sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.4 1",
        "## sudo update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1",
        "echo === System Settings ===",
        "sudo sed -i -r -e '/^mesg n/s/^/tty -s \\&\\& /' /root/.profile",
        "echo 'dash dash/sh boolean false' | sudo debconf-set-selections",
        "sudo dpkg-reconfigure -f noninteractive dash",
        "sudo sed -i -e '/^#NAutoVTs/aNAutoVTs=2' /etc/systemd/logind.conf",
        "sudo update-locale LC_CTYPE={{user `system_locale`}}.UTF-8",
        "echo 'export TZ=:/etc/localtime' | sudo tee /etc/profile.d/tz.sh > /dev/null",
        "sudo update-alternatives --set editor /usr/bin/vim.basic",
        "echo === Sysctl ===",
        "sudo cp /tmp/50-spark.conf /etc/sysctl.d/",
        "sudo chown root:root /etc/sysctl.d/50-spark.conf",
        "sudo chmod 0644 /etc/sysctl.d/50-spark.conf",
        "sudo sysctl -p /etc/sysctl.d/50-spark.conf",
        "echo === Java ===",
        "sudo mkdir /opt/java",
        "curl -sL --retry 3 --insecure --header 'Cookie: oraclelicense=accept-securebackup-cookie;' 'http://download.oracle.com/otn-pub/java/jdk/{{user `java_major_version`}}u{{user `java_update_version`}}-b{{user `java_build_number`}}/jre-{{user `java_major_version`}}u{{user `java_update_version`}}-linux-{{user `os_short_arch`}}.tar.gz' | sudo tar xz --strip-components=1 -C /opt/java/",
        "echo 'export JAVA_HOME=/opt/java' | sudo tee /etc/profile.d/java.sh > /dev/null",
        "sudo sed -i -r -e 's/#DefaultEnvironment/DefaultEnvironment/;/DefaultEnvironment/s/([^=])$/\\1 /;/DefaultEnvironment/s|$|\"JAVA_HOME=/opt/java\"|' /etc/systemd/system.conf",
        "sudo gzip -r /opt/java/man/man1",
        "sudo chown -R root:root /opt/java",
        "for program in java javaws keytool orbd pack200 policytool rmid rmiregistry servertool tnameserv unpack200; do sudo update-alternatives --install /usr/bin/${program} ${program} /opt/java/bin/${program} 1 --slave /usr/share/man/man1/${program}.1.gz ${program}.1.gz /opt/java/man/man1/${program}.1.gz; done",
        "echo === Scala ===",
        "sudo mkdir -p /opt/scala",
        "curl -sL --retry 3 --insecure 'http://downloads.lightbend.com/scala/{{user `scala_version`}}/scala-{{user `scala_version`}}.tgz' | sudo tar xz --strip-components=1 -C /opt/scala/",
        "echo -e 'export SCALA_HOME=/opt/scala' | sudo tee /etc/profile.d/scala.sh > /dev/null",
        "sudo sed -i -r -e 's/#DefaultEnvironment/DefaultEnvironment/;/DefaultEnvironment/s/([^=])$/\\1 /;/DefaultEnvironment/s|$|\"SCALA_HOME=/opt/scala\"|' /etc/systemd/system.conf",
        "sudo gzip -r /opt/scala/man/man1",
        "sudo chown -R root:root /opt/scala",
        "for program in fsc scala scalac scaladoc scalap; do sudo update-alternatives --install /usr/bin/${program} ${program} /opt/scala/bin/${program} 1 --slave /usr/share/man/man1/${program}.1.gz ${program}.1.gz /opt/scala/man/man1/${program}.1.gz; done",
        "echo === Spark ===",
        "sudo groupadd -g {{user `spark_uid`}} spark",
        "sudo useradd -m -u {{user `spark_uid`}} -g {{user `spark_uid`}} -c 'Apache Spark' -s /bin/bash -d /srv/spark spark",
        "curl -sL --retry 3 --insecure 'http://d3kbcqa49mib13.cloudfront.net/spark-{{user `spark_version`}}-bin-hadoop{{user `spark_hadoop_version`}}.tgz' | sudo tar xz --strip-components=1 -C /srv/spark/",
        "sudo mkdir -p /srv/spark/{work,tmp}",
        "sudo mkdir -p /var/{log,run}/spark",
        "sudo ln -s /var/log/spark /srv/spark/logs",
        "sudo ln -s `basename /srv/spark/python/lib/py4j-*-src.zip` /srv/spark/python/lib/py4j.zip",
        "sudo cp /srv/spark/conf/log4j.properties.template /srv/spark/conf/log4j.properties",
        "sudo cp /srv/spark/conf/fairscheduler.xml.template /srv/spark/conf/fairscheduler.xml",
        "echo -e 'export SPARK_HOME=/srv/spark\\nexport PYTHONPATH=$SPARK_HOME/python/:$SPARK_HOME/python/lib/:$SPARK_HOME/python/lib/py4j.zip\\nexport PATH=$PATH:$SPARK_HOME/bin:$SPARK_HOME/sbin' | sudo tee /etc/profile.d/spark.sh > /dev/null",
        "sudo sed -i -r -e 's/#DefaultEnvironment/DefaultEnvironment/;/DefaultEnvironment/s/([^=])$/\\1 /;/DefaultEnvironment/s|$|\"SPARK_HOME=/srv/spark\" \"PYTHONPATH=/srv/spark/python/:/srv/spark/python/lib/:/srv/spark/python/lib/py4j.zip\"|' /etc/systemd/system.conf",
        "sudo cp /tmp/spark-defaults.conf /srv/spark/conf/",
        "sudo cp /tmp/spark-env.sh /srv/spark/conf/",
        "echo -e '\\nspark.jars.packages                          com.databricks:spark-csv_{{user `scala_short_version`}}:{{user `spark_csv_version`}},datastax:spark-cassandra-connector:{{user `spark_cassandra_version`}}-s_{{user `scala_short_version`}}\\n' | sudo tee -a /srv/spark/conf/spark-defaults.conf > /dev/null",
        "echo \"print('all done')\" > /tmp/install-packages.py",
        "sudo -i -u spark /srv/spark/bin/spark-submit --packages com.databricks:spark-csv_{{user `scala_short_version`}}:{{user `spark_csv_version`}},datastax:spark-cassandra-connector:{{user `spark_cassandra_version`}}-s_{{user `scala_short_version`}} /tmp/install-packages.py",
        "rm /tmp/install-packages.py",
        "sudo chown -R spark:spark /srv/spark /var/log/spark /var/run/spark",
        "sudo cp /tmp/spark-master.service /lib/systemd/system/",
        "sudo cp /tmp/spark-worker.service /lib/systemd/system/",
        "sudo cp /tmp/spark-history.service /lib/systemd/system/",
        "sudo systemctl daemon-reload",
        "sudo systemctl enable spark-master.service",
        "sudo systemctl enable spark-worker.service",
        "sudo systemctl enable spark-history.service",
        "echo === Coursier ===",
        "sudo curl -sL --retry 3 --insecure 'https://github.com/alexarchambault/coursier/raw/master/coursier' -o /usr/local/bin/coursier",
        "sudo chmod +x /usr/local/bin/coursier",
        "sudo chown root:staff /usr/local/bin/coursier",
        "echo === Jupyter-Scala ===",
        "curl -sL --retry 3 --insecure 'https://github.com/alexarchambault/jupyter-scala/raw/master/jupyter-scala' -o /tmp/jupyter-scala",
        "chmod +x /tmp/jupyter-scala",
        "sudo -i -u spark /tmp/jupyter-scala --id scala --name \"Scala {{user `scala_short_version`}}\"",
        "rm -f /tmp/jupyter-scala",
        "echo === Jupyter ===",
        "sudo pip install -U jupyter jupyter_contrib_nbextensions bash_kernel wcwidth ipyparallel",
        "sudo -i -u spark jupyter kernelspec list",
        "sudo -i -u spark jupyter notebook --generate-config",
        "sudo sed -i '/c.NotebookApp.disable_check_xsrf /s/^#//; /c.NotebookApp.disable_check_xsrf /s/= .*$/= True/' /srv/spark/.jupyter/jupyter_notebook_config.py",
        "sudo sed -i \"/c.NotebookApp.ip /s/^#//; /c.NotebookApp.ip /s/= .*$/= '*'/\" /srv/spark/.jupyter/jupyter_notebook_config.py",
        "sudo sed -i \"/c.NotebookApp.notebook_dir /s/^#//; /c.NotebookApp.notebook_dir /s|= .*$|= '/srv/notebooks/'|\" /srv/spark/.jupyter/jupyter_notebook_config.py",
        "sudo sed -i '/c.NotebookApp.open_browser /s/^#//; /c.NotebookApp.open_browser /s/= .*$/= False/' /srv/spark/.jupyter/jupyter_notebook_config.py",
        "sudo sed -i '/c.NotebookApp.port /s/^#//; /c.NotebookApp.port /s/= .*$/= 8888/' /srv/spark/.jupyter/jupyter_notebook_config.py",
        "sudo sed -i \"/c.NotebookApp.token /s/^#//; /c.NotebookApp.token /s/= .*$/= ''/\" /srv/spark/.jupyter/jupyter_notebook_config.py",
        "sudo mkdir -p /srv/notebooks",
        "sudo cp /tmp/*.ipynb /srv/notebooks/",
        "sudo chown -R spark:spark /srv/notebooks",
        "for nb in /srv/notebooks/*.ipynb; do sudo -i -u spark /usr/local/bin/jupyter trust ${nb}; done",
        "sudo -u spark jupyter contrib nbextension install --user",
        "sudo -u spark jupyter nbextensions_configurator enable --user",
        "sudo -u spark jupyter nbextension enable autoscroll/main --user",
        "sudo -u spark jupyter nbextension enable autosavetime/main --user",
        "sudo -u spark jupyter nbextension enable execute_time/ExecuteTime --user",
        "sudo -u spark jupyter nbextension enable table_beautifier/main --user",
        "sudo -u spark jupyter nbextension enable toggle_all_line_numbers/main --user",
        "sudo -u spark jupyter nbextension enable ruler/main --user",
        "sudo -u spark jupyter nbextension enable tree-filter/index --user",
        "sudo cp /tmp/jupyter-notebook.service /lib/systemd/system/",
        "sudo systemctl daemon-reload",
        "sudo systemctl enable jupyter-notebook.service",
        "sudo rm -rf /root/.ipython /root/.ivy2 /root/.pip",
        "echo === Extra System Settings ===",
        "sudo swaplabel -L SWAP /dev/sda1",
        "sudo sed -i -e '/cdrom/d' /etc/fstab",
        "sudo sed -r -i -e 's/(UUID=)[^ ]* (.*)/LABEL=SWAP      \\2/' /etc/fstab",
        "sudo sed -r -i -e 's/(GRUB_TIMEOUT)=(.*)/\\1=1/' /etc/default/grub",
        "sudo sed -r -i -e 's/.*(GRUB_CMDLINE_LINUX)=\"(.*)\"/\\1=\"\\2 cgroup_enable=memory\"/' /etc/default/grub",
        "sudo update-grub2",
        "echo 'blacklist intel_rapl' | sudo tee /etc/modprobe.d/rapl-blacklist.conf > /dev/null",
        "echo 'blacklist i2c_piix4' | sudo tee /etc/modprobe.d/piix4-blacklist.conf > /dev/null",
        "sudo update-initramfs -u -k all",
        "echo 'UseDNS no' | sudo tee -a /etc/ssh/sshd_config > /dev/null",
        "echo === Shared Folder ===",
        "sudo mkdir /shared",
        "sudo chown {{user `system_user`}}:{{user `system_user`}} /shared",
        "echo === SSH Key ===",
        "sudo mkdir -p /home/{{user `system_user`}}/.ssh",
        "sudo wget -q --no-check-certificate https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub -O /home/{{user `system_user`}}/.ssh/authorized_keys",
        "sudo chmod 0700 /home/{{user `system_user`}}/.ssh",
        "sudo chmod 0600 /home/{{user `system_user`}}/.ssh/authorized_keys",
        "sudo chown -R {{user `system_user`}}:{{user `system_user`}} /home/{{user `system_user`}}/.ssh",
        "echo === System Cleanup ===",
        "sudo rm -f /root/.bash_history",
        "sudo rm -f /home/{{user `system_user`}}/.bash_history",
        "sudo rm -f /home/{{user `system_user`}}/.vbox_version",
        "sudo rm -f /home/{{user `system_user`}}/.prlctl_version",
        "sudo rm -f /home/{{user `system_user`}}/*.iso",
        "sudo rm -f /var/log/wtmp",
        "sudo rm -f /var/log/btmp",
        "sudo rm -rf /var/log/installer",
        "sudo rm -rf /tmp/* /var/tmp/* /tmp/.*-unix",
        "sudo find /usr/share/locale/* -maxdepth 0 -type d -not -name 'pt*' -not -name 'en*' -exec rm -rf {} \\;",
        "sudo find /usr/share/doc/* -maxdepth 0 -not -name 'virtualbox*' -exec rm -rf {} \\;",
        "sudo find /var/cache -type f -delete",
        "sudo find /var/log -type f | while read f; do echo -n '' | sudo tee $f > /dev/null; done;",
        "sudo find /var/lib/apt/lists -not -name lock -type f -delete",
        "sudo swapoff /dev/sda1",
        "sudo dd if=/dev/zero of=/dev/sda1 || echo 'dd exit code suppressed'",
        "sudo mkswap -L SWAP /dev/sda1",
        "sudo swapon /dev/sda1",
        "sudo dd if=/dev/zero of=/EMPTY bs=1M || echo 'dd exit code suppressed'",
        "sudo rm -f /EMPTY",
        "sudo sync",
        "echo === All Done ==="
      ]
    },
    {
      "type":    "shell-local",
      "command": "case \"$OSTYPE\" in *linux*|*hurd*|*msys*|*cygwin*|*sua*|*interix*) sed -i'' -e '/config.ssh.username/s/=.*/= \"{{user `system_user`}}\"/' Vagrantfile.tpl;; *) sed -i '' -e '/config.ssh.username/s/=.*/= \"{{user `system_user`}}\"/' Vagrantfile.tpl;; esac"
    }
  ],
  "post-processors": [
    [
      {
        "type":                 "vagrant",
        "compression_level":    9,
        "keep_input_artifact":  false,
        "vagrantfile_template": "Vagrantfile.tpl",
        "output":               "builds/providers/{{ .Provider }}/{{user `app_name`}}{{user `app_name_ext`}}.box"
      }
    ]
  ]
}
